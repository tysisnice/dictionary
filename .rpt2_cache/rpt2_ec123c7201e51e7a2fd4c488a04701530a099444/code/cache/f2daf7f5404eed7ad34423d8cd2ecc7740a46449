{"code":"import * as tslib_1 from \"tslib\";\r\nimport { writable } from 'svelte/store';\r\nvar AppState = /** @class */ (function () {\r\n    function AppState() {\r\n        this.page = '/';\r\n        this.offline = false;\r\n        this.drawerOpened = false;\r\n        this.snackbarOpened = false;\r\n        this.scrollingDown = false;\r\n    }\r\n    return AppState;\r\n}());\r\nexport { AppState };\r\nvar _a = writable(new AppState), subscribe = _a.subscribe, update = _a.update, set = _a.set;\r\nvar snackbarTimer;\r\nexport var app = {\r\n    subscribe: subscribe, update: update, set: set,\r\n    navigate: function (path) {\r\n        var page = path === '/' ? 'welcome' : path.slice(1);\r\n        update(function (state) { return (tslib_1.__assign({}, state, { page: page })); });\r\n    },\r\n    showSnackbar: function () {\r\n        window.clearTimeout(snackbarTimer);\r\n        update(function (state) { return (tslib_1.__assign({}, state, { snackbarOpened: true })); });\r\n        snackbarTimer = setTimeout(function () {\r\n            update(function (state) { return (tslib_1.__assign({}, state, { snackbarOpened: false })); });\r\n        }, 3000);\r\n    },\r\n    updateScrollingStatus: function (scrollingDown) {\r\n        update(function (state) { return (tslib_1.__assign({}, state, { scrollingDown: scrollingDown })); });\r\n    },\r\n    updateOffline: function (offline) {\r\n        var _this = this;\r\n        update(function (state) {\r\n            if (offline !== state.offline) {\r\n                _this.showSnackbar();\r\n            }\r\n            return tslib_1.__assign({}, state, { offline: offline });\r\n        });\r\n    }\r\n};\r\n","references":["C:/Users/tysis/OneDrive/Documents/GitHub/dictionary/node_modules/svelte/store/index.d.ts"]}
