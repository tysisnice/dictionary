{"code":"import { writable, derived } from 'svelte/store';\r\nimport idb from './idb';\r\nimport { entries, language } from './dictionary';\r\n// Code to use IndexedDB local storage system. call this at every state change, it\r\n// returns the state so use it like this update(state => idbUpdate({ ..state, prop }))\r\nvar IDB_SAVED_BY_ID = 'FAVORITES-saved-by-id';\r\nvar savedByIdInit = [];\r\nexport var savedById = writable(savedByIdInit);\r\nexport var toggleFavorite = function (_id) {\r\n    if (_id === void 0) { _id = ''; }\r\n    savedById.update(function (state) {\r\n        if (state.includes(_id)) {\r\n            state = state.filter(function (e) { return e !== _id; });\r\n        }\r\n        else {\r\n            state.push(_id);\r\n        }\r\n        idb.set(IDB_SAVED_BY_ID, state);\r\n        return state;\r\n    });\r\n};\r\nexport var savedWords = derived([entries, savedById], function (_a) {\r\n    var $entries = _a[0], $savedById = _a[1];\r\n    var list = $savedById.map(function (id) {\r\n        var match = $entries.primary.find(function (e) { return e._id === id; });\r\n        return match || $entries.secondary.find(function (e) { return e._id === id; });\r\n    }).filter(function (e) { return e !== undefined; });\r\n    return list;\r\n});\r\nexport var wordOfTheDay = derived([entries, language], function (_a) {\r\n    var $entries = _a[0], $language = _a[1];\r\n    var date = new Date(), month = date.getMonth() * 170, year = date.getFullYear() - 1950, day = date.getDate(), index = month + day + year;\r\n    return $entries[$language.selected][index];\r\n});\r\n// updating the state from IndexedDB local storage\r\nidb.get(IDB_SAVED_BY_ID).then(function (data) {\r\n    data && savedById.set(data);\r\n});\r\n","references":["C:/Users/tysis/OneDrive/Documents/GitHub/dictionary/node_modules/svelte/store/index.d.ts","C:/Users/tysis/OneDrive/Documents/GitHub/dictionary/src/store/idb.ts","C:/Users/tysis/OneDrive/Documents/GitHub/dictionary/src/store/dictionary.ts"]}
