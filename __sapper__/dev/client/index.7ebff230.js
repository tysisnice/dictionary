import { S as SvelteComponentDev, a as init, s as safe_not_equal, b as space, e as element, t as text, f as claim_text, c as claim_element, d as children, g as detach, h as attr, j as add_location, k as insert, l as append, m as mount_component, w as set_data, o as transition_in, p as transition_out, q as destroy_component, x as validate_store, y as component_subscribe } from './index.42697b0b.js';
import { a as app } from './index.740af30a.js';
import { W as WordCard } from './WordCard.10d51910.js';

/* src\routes\index.svelte generated by Svelte v3.9.0 */

const file = "src\\routes\\index.svelte";

function create_fragment(ctx) {
	var t0, h1, t1, t2, t3, figure, img, t4, figcaption, t5_value = ctx.$app.page + "", t5, t6, t7, t8, t9, p, strong, t10, current;

	var wordcard = new WordCard({
		props: { entry: ctx.entry, open: true },
		$$inline: true
	});

	return {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text("Great success!");
			t2 = space();
			wordcard.$$.fragment.c();
			t3 = space();
			figure = element("figure");
			img = element("img");
			t4 = space();
			figcaption = element("figcaption");
			t5 = text(t5_value);
			t6 = text("HIGH FIVE ");
			t7 = text(ctx.frog);
			t8 = text("!");
			t9 = space();
			p = element("p");
			strong = element("strong");
			t10 = text("Try editing this file (src/routes/index.svelte) to test live reloading.");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "\r\n\r\n\r\n\r\n\r\n");

			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t1 = claim_text(h1_nodes, "Great success!");
			h1_nodes.forEach(detach);
			t2 = claim_text(nodes, "\r\n");
			wordcard.$$.fragment.l(nodes);
			t3 = claim_text(nodes, "\r\n");

			figure = claim_element(nodes, "FIGURE", { class: true }, false);
			var figure_nodes = children(figure);

			img = claim_element(figure_nodes, "IMG", { alt: true, src: true, class: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach);
			t4 = claim_text(figure_nodes, "\r\n\t");

			figcaption = claim_element(figure_nodes, "FIGCAPTION", {}, false);
			var figcaption_nodes = children(figcaption);

			t5 = claim_text(figcaption_nodes, t5_value);
			t6 = claim_text(figcaption_nodes, "HIGH FIVE ");
			t7 = claim_text(figcaption_nodes, ctx.frog);
			t8 = claim_text(figcaption_nodes, "!");
			figcaption_nodes.forEach(detach);
			figure_nodes.forEach(detach);
			t9 = claim_text(nodes, "\r\n\r\n");

			p = claim_element(nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			strong = claim_element(p_nodes, "STRONG", {}, false);
			var strong_nodes = children(strong);

			t10 = claim_text(strong_nodes, "Try editing this file (src/routes/index.svelte) to test live reloading.");
			strong_nodes.forEach(detach);
			p_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			document.title = "Iu Mien Language";
			attr(h1, "class", "svelte-j261qi");
			add_location(h1, file, 27, 0, 405);
			attr(img, "alt", "Borat");
			attr(img, "src", "great-success.png");
			attr(img, "class", "svelte-j261qi");
			add_location(img, file, 30, 1, 474);
			add_location(figcaption, file, 31, 1, 518);
			attr(figure, "class", "svelte-j261qi");
			add_location(figure, file, 29, 0, 463);
			add_location(strong, file, 34, 3, 589);
			attr(p, "class", "svelte-j261qi");
			add_location(p, file, 34, 0, 586);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, h1, anchor);
			append(h1, t1);
			insert(target, t2, anchor);
			mount_component(wordcard, target, anchor);
			insert(target, t3, anchor);
			insert(target, figure, anchor);
			append(figure, img);
			append(figure, t4);
			append(figure, figcaption);
			append(figcaption, t5);
			append(figcaption, t6);
			append(figcaption, t7);
			append(figcaption, t8);
			insert(target, t9, anchor);
			insert(target, p, anchor);
			append(p, strong);
			append(strong, t10);
			current = true;
		},

		p: function update(changed, ctx) {
			var wordcard_changes = {};
			if (changed.entry) wordcard_changes.entry = ctx.entry;
			wordcard.$set(wordcard_changes);

			if ((!current || changed.$app) && t5_value !== (t5_value = ctx.$app.page + "")) {
				set_data(t5, t5_value);
			}

			if (!current || changed.frog) {
				set_data(t7, ctx.frog);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(wordcard.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(wordcard.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(h1);
				detach(t2);
			}

			destroy_component(wordcard, detaching);

			if (detaching) {
				detach(t3);
				detach(figure);
				detach(t9);
				detach(p);
			}
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $app;

	validate_store(app, 'app');
	component_subscribe($$self, app, $$value => { $app = $$value; $$invalidate('$app', $app); });

	



  let frog = "frogger";
  $$invalidate('frog', frog += 'g');
  const entry = {
     word: "asdfasdfsa",
  clarifyer: "aaaaaaaaaaaaaaaaa",
  language: "no lang",
  otherWords: [],
  lastEdited: "original",
  _id: 'sad'

  };

	return { frog, entry, $app };
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, []);
	}
}

export default Index;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguN2ViZmYyMzAuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuPHN2ZWx0ZTpoZWFkPlxyXG5cdDx0aXRsZT5JdSBNaWVuIExhbmd1YWdlPC90aXRsZT5cclxuPC9zdmVsdGU6aGVhZD5cclxuXHJcblxyXG48c2NyaXB0PlxyXG5cclxuICBpbXBvcnQge2FwcH0gZnJvbSAnLi4vc3RvcmUnO1xyXG4gIGltcG9ydCBXb3JkQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL1dvcmRDYXJkLnN2ZWx0ZSdcclxuXHJcblxyXG5cclxuICBsZXQgZnJvZyA9IFwiZnJvZ2dlclwiO1xyXG4gIGZyb2cgKz0gJ2cnO1xyXG4gIGNvbnN0IGVudHJ5ID0ge1xyXG4gICAgIHdvcmQ6IFwiYXNkZmFzZGZzYVwiLFxyXG4gIGNsYXJpZnllcjogXCJhYWFhYWFhYWFhYWFhYWFhYVwiLFxyXG4gIGxhbmd1YWdlOiBcIm5vIGxhbmdcIixcclxuICBvdGhlcldvcmRzOiBbXSxcclxuICBsYXN0RWRpdGVkOiBcIm9yaWdpbmFsXCIsXHJcbiAgX2lkOiAnc2FkJ1xyXG5cclxuICB9XHJcbjwvc2NyaXB0PlxyXG5cclxuPGgxPkdyZWF0IHN1Y2Nlc3MhPC9oMT5cclxuPFdvcmRDYXJkIHtlbnRyeX0gb3Blbj17dHJ1ZX0vPlxyXG48ZmlndXJlPlxyXG5cdDxpbWcgYWx0PSdCb3JhdCcgc3JjPSdncmVhdC1zdWNjZXNzLnBuZyc+XHJcblx0PGZpZ2NhcHRpb24+eyRhcHAucGFnZX1ISUdIIEZJVkUge2Zyb2d9ITwvZmlnY2FwdGlvbj5cclxuPC9maWd1cmU+XHJcblxyXG48cD48c3Ryb25nPlRyeSBlZGl0aW5nIHRoaXMgZmlsZSAoc3JjL3JvdXRlcy9pbmRleC5zdmVsdGUpIHRvIHRlc3QgbGl2ZSByZWxvYWRpbmcuPC9zdHJvbmc+PC9wPlxyXG5cclxuXHJcblxyXG5cclxuXHJcbjxzdHlsZT5cclxuXHRoMSwgZmlndXJlLCBwIHtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRcdG1hcmdpbjogMCBhdXRvO1xyXG5cdH1cclxuXHJcblx0aDEge1xyXG5cdFx0Zm9udC1zaXplOiAyLjhlbTtcclxuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0XHRmb250LXdlaWdodDogNzAwO1xyXG5cdFx0bWFyZ2luOiAwIDAgMC41ZW0gMDtcclxuXHR9XHJcblxyXG5cdGZpZ3VyZSB7XHJcblx0XHRtYXJnaW46IDAgMCAxZW0gMDtcclxuXHR9XHJcblxyXG5cdGltZyB7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdG1heC13aWR0aDogNDAwcHg7XHJcblx0XHRtYXJnaW46IDAgMCAxZW0gMDtcclxuXHR9XHJcblxyXG5cdHAge1xyXG5cdFx0bWFyZ2luOiAxZW0gYXV0bztcclxuXHR9XHJcblxyXG5cdEBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xyXG5cdFx0aDEge1xyXG5cdFx0XHRmb250LXNpemU6IDRlbTtcclxuXHRcdH1cclxuXHR9XHJcbjwvc3R5bGU+XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7cUVBK0JjLElBQUksQ0FBQyxJQUFJOzs7c0JBSFosS0FBSyxRQUFRLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7OztpQkFHTyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5Q0FBSixJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21EQUg1QixLQUFLOzs7a0VBR0YsSUFBSSxDQUFDLElBQUk7Ozs7O3FCQUFZLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQWpCckMsSUFBSSxJQUFJLEdBQUcsU0FBUyxDQUFDO3VCQUNyQixJQUFJLElBQUksSUFBRyxDQUFDO0VBQ1osTUFBTSxLQUFLLEdBQUc7S0FDWCxJQUFJLEVBQUUsWUFBWTtFQUNyQixTQUFTLEVBQUUsbUJBQW1CO0VBQzlCLFFBQVEsRUFBRSxTQUFTO0VBQ25CLFVBQVUsRUFBRSxFQUFFO0VBQ2QsVUFBVSxFQUFFLFVBQVU7RUFDdEIsR0FBRyxFQUFFLEtBQUs7O0lBRVQ7Ozs7Ozs7Ozs7Ozs7OyJ9
